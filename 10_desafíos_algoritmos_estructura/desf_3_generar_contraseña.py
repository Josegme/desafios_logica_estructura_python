"""
ğŸš€ DesafÃ­o 3 - Generador de contraseÃ±as seguras
ğŸ“Œ Problema: NecesitÃ¡s crear contraseÃ±as fuertes que sean difÃ­ciles de hackear.

ğŸ’¡ DesafÃ­o: Â¿CÃ³mo generarÃ­as una contraseÃ±a aleatoria con alto nivel de seguridad?

âœ… Pistas:

UsÃ¡ caracteres mayÃºsculas, minÃºsculas, nÃºmeros y sÃ­mbolos.
Asegurate de que la contraseÃ±a tenga al menos 12 caracteres.
ImplementÃ¡ una opciÃ³n para generar mÃºltiples contraseÃ±as.
"""
#soluciÃ³n usando secrets & string

import secrets
import string
#definimos una funciÃ³n para generar la contraseÃ±a
def generar_contraseÃ±a(longitud=12):
    caracteres = string.ascii_letters + string.digits + string.punctuation
    return ' '.join(secrets.choice(caracteres) for _ in range(longitud))

#generaramos y mostramos la contraseÃ±a segura
print(f'ContraseÃ±a generada: {generar_contraseÃ±a()}')

"""
secrets.choice() Mas seguro que random.choice() para criptografÃ­a 
ser usan todos los tipos de caracteres para mayor seguridad ascii_letter + digits + punctuation

"""