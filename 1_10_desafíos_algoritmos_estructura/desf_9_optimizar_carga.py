"""
üöÄ Desaf√≠o 9 - Optimizar la carga de im√°genes en una galer√≠a web
üìå Problema: Necesit√°s que las im√°genes de una galer√≠a se carguen de forma eficiente sin afectar la velocidad de la web.

üí° Desaf√≠o: ¬øQu√© estrategias aplicar√≠as para mejorar la carga sin afectar la experiencia del usuario?

‚úÖ Pistas:
üîπ Implement√° "lazy loading" para cargar im√°genes solo cuando sean visibles.
üîπ Us√° formatos optimizados como WebP para reducir el tama√±o.
üîπ Aplic√° compresi√≥n sin perder calidad.
EN ESTE TUVE QUE INVESTIGAR UN POCO Y RECIB√çN AYUDA DE MI PROFE LUIS

"""
#PRIMERO HAY QUE INSTALAR pip isntall pillow
#una vez instalado -> esrcribir un script para convertir im√°genes JPG-PNG-WebP

from PIL import Image
#para abrir la img y convertirla a WebP
image = Image.open("imagen.jpg")  #cambiar por la img que tengas
image.save("imagen.webp", "WEBP", quality=80) #guardar en WebP con la calidad 80 para este caso

print("Imagen convertida a WebP con √©xito")

#si quiereo mostrar im√°genes en una web sin recargarlas todas de golpe, usamos FLASK
#instalar -> pip install flask
#creamos un servidor que muestre las imagenes
from flask import Flask, send_file

app = Flask(__name__)

@app.route('/imagen')
def mostrar_imagen():
    return send_file("imagen.webp", mimetype='image/webp')

if __name__ == '__main__':
    app.run(debug=True)
#esto tiene que servir la img solamente cuando alguien solicita

#esto ir√≠a en HTML
"""
<img src="http://127.0.0.1:5000/imagen" loading="lazy" alt="Imagen optimizada">
con esta etiqueta se carga solo cuando uno necesita
entonces
converitmos im√°genes a WebP con Pilow
Creamos un servidor b√°sico con Flask para servir imagenes
usamos lazy loading en HTML para mejorar la velocidad de la web

"""