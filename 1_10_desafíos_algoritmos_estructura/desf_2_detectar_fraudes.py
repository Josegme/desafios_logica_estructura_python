"""
üìå Problema: Un banco necesita detectar movimientos sospechosos en tiempo real.

üí° Desaf√≠o: ¬øC√≥mo detectar√≠as si una transacci√≥n es fraudulenta bas√°ndote en el historial del usuario?

‚úÖ Pistas:

Analiz√° montos inusuales respecto a compras previas.
Us√° un desviaci√≥n est√°ndar para detectar anomal√≠as.
Consider√° la frecuencia de transacciones en cortos per√≠odos de tiempo 
(utilizaos numpy para detectar anomal√≠as)
"""
import numpy as np

#historial de transacciones
transacciones = [50,45,60,55,70,2000] #Puse la √∫ltima como transacci√≥n sospechosa

#calculamos la media y la desviaci√≥n est√°ndar
media = np.mean(transacciones[:-1])
desviacion = np.std(transacciones[:-1])

#detectamos si la √∫ltima transacci√≥n es sospechosa
ultima = transacciones[-1]
es_fraude = ultima > media + 3*desviacion

print(f'√öltima transacci√≥n: ${ultima}')
print('FRAUDE DETECTADO' if es_fraude else 'Transacci√≥n Normal.')

"""
numpy.mean() y numply.std() calculan el comportamiento normal de gastos
se usa la regla 3 sigmas para idetificar valores fuera de lo normal
tiempo de ejecucion 0(1) excelente para deteccion en tiempo real.

"""
